h1, p {
    font-family: Lato;
  }
  
  h2 {
    color: limegreen;
    font-size: 60px;
    font-weight: normal;
    text-decoration: underline;
    text-transform: uppercase;
    border: 3px solid pink;
  }
  
  h3 {
    color: #0400ff;
    font-size: 66 0em;
    font-weight: lighter;
    text-decoration: line-through;
    text-transform: lowercase;
    border-style: dotted;
    border-color: orange;
    border-width: 3px;
  }

  div{
    color: blueviolet;
}

body{
  color: black;
  font-style: normal;
  font-family: 'Times New Roman', Times, serif;
}

span{
  color: purple;
  text-decoration: underline;
  font-style: italic;
}

ol{
  list-style: square;
}

.branding {
  color:red;
}

.blog-post-title {
  color: limegreen;
}

/*In CSS the period (.) before the selector means class. Always stile on classes, not on tags, unless you want all the elements in the page to look the same way. To style in tag you don't need to add the period (.) before.*/

/*Below is cascade, if you cascade for one class, the one that's the last wins, so title would be green. We shouldn't have to rules for the same class.*/

.title {
  color: red;
}

.title {
  color: green;
}

/*In the following cascase, title 2 gets color from the second but border from the first, cause it was not specified in the second.*/
.main-brand-2 {
  border: 1px solid black;
  color: red;
}

.title-2 {
  color: green;
}

/*Multiple classes, the one that is more specific wins. They need to be separated by a period.*/
.main-brand-3.title-3 {
  color: red;
}

.title-3 {
  color: green;
}

/*Classes are more specific than tags.*/
.title-4 {
  color: orange;
}

h1 {
  color: green;
}

.hover-example {
  width: 100px;
  height: 100px;
  background-color: limegreen;
  color: white;
}
.hover-example:hover {
  background-color: crimson;
  width: 150px;
  height: 150px;
}

 .first-child-example {
  color: crimson;
}
.first-child-example:first-child {
  color: limegreen;
}

  .ex-box {
  border: 3px solid #aaa;
  background-color: #eee;
  height: 200px;
  width: 200px;
  display: flex;
  align-items: center;
  justify-content: center;
  float: left;
  margin-right: 10px;
  border-radius: 5px;
  font-size: 30px;
}
.ex-box:last-of-type {
  clear: right;
}

/*Block measurements*/
.example {
border: 3px solid red;
padding: 5px;
margin: 25px;
background-color: white;
}

.box-1 {
  border: 1px solid black;
  color: white;
  background-color: blue;
  height: 150px;
  width: 300px;
}
.box-2 {
  border: 1px solid black;
  color: white;
  background-color: red;
  height: 100px;
  width: 300px;
}
.box-3 {
  border: 1px solid black;
  color: white;
  background-color: green;
  height: 200px;
  width: 100px;
}

.flex-container {
  display: flex;
  width: 100%;
  border: 1px solid black;
}

.floated .box div {
  float: left;
}

/* You always need to include the flex-container first*/
 
.reverse {
  flex-direction: row-reverse;
}

.column {
  flex-direction: column;
}
/*you can do column-reverse*/

.jc-right {
  justify-content: flex-end;
}

.jc-center {
  justify-content: center;
}

.jc-sb {
  justify-content: space-between;
}
/*you can do space-evently*/

.jc-sa {
  justify-content: space-around;
}

  .ai-fe {
  align-items: flex-end;
}
/*you can add padding-top for instance*/
.ai-center {
  align-items: center;
}

 .ai-stretch {
  align-items: stretch;
  height: 200px;
}
/* remove the height from the three boxes */
.no-height {
  height: inherit;
}

/* How to align only one box and change order:
.box-2 {
  align-self: flex-end;
  order: 5;
}
*/

